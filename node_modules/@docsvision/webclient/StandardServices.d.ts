import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
import { $FolderViews } from "@docsvision/webclient/Legacy/$FolderViews";
import { $NavBar } from "@docsvision/webclient/Legacy/$NavBar";
import { $SearchPanel } from "@docsvision/webclient/Legacy/$SearchPanel";
import { $Folders } from "@docsvision/webclient/Legacy/$Folders";
import { $Sidebar } from "@docsvision/webclient/Legacy/$Sidebar";
import { $UserMenu } from "@docsvision/webclient/Legacy/$UserMenu";
import { $FileDownload } from '@docsvision/webclient/Platform/$FileDownload';
import { $WindowLocation } from '@docsvision/webclient/Platform/$WindowLocation';
import { $FilePickerUpload } from '@docsvision/webclient/Platform/IFilePickerUploadService';
import { $InsideMainMenu } from '@docsvision/webclient/Platform/$InsideMainMenu';
import { $BatchOperationsPerformer } from '@docsvision/webclient/Platform/$BatchOperationsPerformer';
import { $BatchOperationsProgressDialog } from '@docsvision/webclient/Platform/$BatchOperationsProgressDialog';
import { $UnreadCounter } from "@docsvision/webclient/Platform/$UnreadCounter";
import { $Layout } from "@docsvision/webclient/System/$Layout";
import { $CardId, $CardInfo, $CardTimestamp, $ControlStore, $EditOperationStore, $ExtendedDataSourceInfos, $LayoutInfo, $OwnerLayout, $RowId, $RowInfo } from "@docsvision/webclient/System/LayoutServices";
import { $LayoutControlFactory } from "@docsvision/webclient/System/$LayoutControlFactory";
import { $ExtensionManager } from '@docsvision/webclient/System/IExtensionManager';
import { $RequestManager } from "@docsvision/webclient/System/$RequestManager";
import { $UrlResolver } from '@docsvision/webclient/System/$UrlResolver';
import { $UrlStore } from "@docsvision/webclient/System/$UrlStore";
import { FieldSpec } from '@docsvision/webclient/System/GetFieldName';
import { $LayoutManager } from "@docsvision/webclient/System/$LayoutManager";
import { $LocalStorage } from "@docsvision/webclient/System/$LocalStorage";
import { $MessageBox } from '@docsvision/webclient/System/$MessageBox';
import { $Router, $RouterNavigation } from "@docsvision/webclient/System/$Router";
import { $Timeout } from '@docsvision/webclient/System/$Timeout';
import { $RealtimeCommunicationService } from "@docsvision/webclient/System/$RealtimeCommunicationService";
import { $WebServices } from '@docsvision/webclient/System/IWebServicesService';
/** Сервис доступа к идентификатору текущего пользователя. */
export declare type $CurrentEmployeeId = {
    currentEmployeeId: string;
};
export declare const $CurrentEmployeeId: FieldSpec<$CurrentEmployeeId, string>;
/** Сервис доступа к логину текущего пользователя. */
export declare type $CurrentEmployeeAccountName = {
    currentEmployeeAccountName: string;
};
export declare const $CurrentEmployeeAccountName: FieldSpec<$CurrentEmployeeAccountName, string>;
/** Сервис информации о типе устройства, в котором открыт Web-клиент. */
export declare type $DeviceType = {
    deviceType: GenModels.DeviceType;
    defaultDeviceType: GenModels.DeviceType;
};
export declare const $DeviceType: FieldSpec<$DeviceType, GenModels.DeviceType>;
/** Сервис доступа к временной метке запуска сервера. */
export declare type $ApplicationTimestamp = {
    applicationTimestamp: number;
};
export declare const $ApplicationTimestamp: FieldSpec<$ApplicationTimestamp, number>;
/** Сервис доступа к адресу сайта. */
export declare type $SiteUrl = {
    siteUrl: string;
};
export declare const $SiteUrl: FieldSpec<$SiteUrl, string>;
/** Сервис доступа к текущей локали Web-клиента в двухбуквенном формате (en, ru). */
export declare type $Locale = {
    locale: string;
};
export declare const $Locale: FieldSpec<$Locale, string>;
/** Сервис доступа к настройке полнотекстового поиска. */
export declare type $FullTextSearchEnabled = {
    fullTextSearchEnabled: boolean;
};
export declare const $FullTextSearchEnabled: FieldSpec<$FullTextSearchEnabled, boolean>;
/** Сервис получения информации плагине КриптоПро. */
export declare type $InstalledCSP = {
    installedCSP: boolean;
};
export declare const $InstalledCSP: FieldSpec<$InstalledCSP, boolean>;
/** Сервис информации об имени базы, с которой работает Web-клиент. */
export declare type $BaseName = {
    baseName: string;
};
export declare const $BaseName: FieldSpec<$BaseName, string>;
export declare type $RouteTimestamp = {
    readonly routeTimestamp: number;
    updateRouteTimestamp(): any;
};
export declare const $RouteTimestamp: FieldSpec<$RouteTimestamp, number>;
export declare type $IsMobileSafari = {
    isMobileSafari: boolean;
};
export declare const $IsMobileSafari: FieldSpec<$IsMobileSafari, boolean>;
/** Настройка из web.config - включено ли логирование клиентского роутинга. */
export declare type $EnableRouterLogging = {
    enableRouterLogging: boolean;
};
export declare const $EnableRouterLogging: FieldSpec<$EnableRouterLogging, boolean>;
export declare type $LogEnabled = {
    logEnabled: boolean;
};
export declare const $LogEnabled: FieldSpec<$LogEnabled, boolean>;
export declare type $IsIE10 = {
    readonly isIE10: boolean;
};
export declare const $IsIE10: FieldSpec<$IsIE10, boolean>;
export declare type $IsIE = {
    readonly isIE: boolean;
};
export declare const $IsIE: FieldSpec<$IsIE, boolean>;
export declare type $IsSafari = {
    readonly isSafari: boolean;
};
export declare const $IsSafari: FieldSpec<$IsSafari, boolean>;
export declare type $LastSearchRequest = {
    lastSearchRequest: string;
};
export declare const $LastSearchRequest: FieldSpec<$LastSearchRequest, string>;
export declare type $CurrentEmployee = {
    currentEmployee: GenModels.EmployeeModel;
};
export declare const $CurrentEmployee: FieldSpec<$CurrentEmployee, GenModels.EmployeeModel>;
export declare type $ApplicationSettings = {
    applicationSettings: GenModels.ApplicationSettings;
};
export declare const $ApplicationSettings: FieldSpec<$ApplicationSettings, GenModels.ApplicationSettings>;
/** Стандартные сервисы Web-клиента. */
export declare type $StandardServices = $Layout & $Router & $CurrentEmployeeId & $CurrentEmployeeAccountName & $DeviceType & $SiteUrl & $Locale & $FullTextSearchEnabled & $RequestManager & $Sidebar & $FolderViews & $SearchPanel & $NavBar & $Folders & $UnreadCounter & $InstalledCSP & $ApplicationTimestamp & $LayoutManager & $RealtimeCommunicationService & $UserMenu & $LayoutControlFactory & $EditOperationStore & $LayoutInfo & $CardInfo & $RowInfo & $CardId & $RowId & $CardTimestamp & $ControlStore & $LocalStorage & $BaseName & $RouteTimestamp & $EnableRouterLogging & $IsMobileSafari & $LogEnabled & $IsIE10 & $IsIE & $IsSafari & $LastSearchRequest & $UrlStore & $UrlResolver & $CurrentEmployee & $RouterNavigation & $OwnerLayout & $ApplicationSettings & $ExtensionManager & $WebServices & $BatchOperationsProgressDialog & $BatchOperationsPerformer & $InsideMainMenu & $ExtendedDataSourceInfos & $Timeout & $FilePickerUpload & $MessageBox & $WindowLocation & $FileDownload;
